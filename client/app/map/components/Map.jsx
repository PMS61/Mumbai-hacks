"use client"

import React, { useState } from 'react';
import generateInterpolatedGrid from './interpolategrid';
import gradient from './gradient';

function getShadeFromValue(value, color = 'blue') {
  // Clamp the value to ensure it's between 0 and 1
  const clampedValue = Math.min(Math.max(value, 0), 1);

  // Define base hues for primary colors
  const hues = {
    red: 0,
    green: 120,
    blue: 240,
    purple: 270,
    yellow: 60,
    orange: 30,
    pink: 300
  };

  // Set the hue based on the color input, defaulting to blue
  const hue = hues[color.toLowerCase()] || hues['blue'];

  // Adjust lightness to give 0.3 a light shade and 0.7 a darker shade
  const lightness = 85 - clampedValue * 50; // Range from 85% (light) to 35% (dark)

  return `hsl(${hue}, 100%, ${lightness}%)`;
}

function generateRandomGrid(n, m) {
  const grid = Array.from({ length: n }, () => 
    Array.from({ length: m }, () => Math.random())
  );
  return grid;
}



const Map = ({v = 20, color = "blue" }) => {
  let oldgrid = [[0.6334982166248159, 0.0, 0.7280844325352732, 0.9575921806577424, 0.6553934407223083, 0.5374091119562111, 0.6680819409228616, 0.5118585628293195, 0.02935781930625157, 0.04395463537124664, 0.4439016345985588, 0.3407870470720314, 0.42534992391940724, 0.7212598629325127, 0.42544858024900284, 0.5549764196969883], [0.3073065453793912, 0.1804064208707825, 0.3203471838658735, 0.18847103572583335, 0.5806544299212406, 0.5434379498494591, 0.8815835997174252, 0.10719550299965652, 0.3219141632322982, 0.01945762062536591, 0.6838316678176571, 0.17719108866899655, 0.15683980012371648, 0.40777181439071797, 0.11573395628444422, 0.6110240166952434], [0.7060876716314085, 0.5986307653642832, 0.4959705730492512, 0.027597127876606137, 0.8139737689382346, 0.421140107110529, 0.3984707548793477, 0.7621734349469524, 0.3016939363803497, 0.9001065056288118, 0.7869462553441846, 0.5213367716624456, 0.9101356056454463, 0.6598869844936734, 0.4931138602061414, 0.6058550011197854], [0.14113400049976274, 0.1730705666401903, 0.37167872026177773, 0.737131289971116, 0.9096992134138043, 0.016464085135371606, 0.328851071429343, 0.12314038219606112, 0.524593150658297, 0.8468184053824588, 0.3109618704087901, 0.8853296597652843, 0.9262245086806767, 0.879221608760682, 0.5240292973292939, 0.4045543218313496], [0.6235497699579235, 0.4088174274605933, 0.5483030751249947, 0.08386868194423543, 0.6926502474689611, 0.6098574236007545, 0.7717675829703333, 0.9224525243418291, 0.022102618425401774, 0.3632021972276851, 0.26721606960384087, 0.6177276062733904, 0.4383300723935826, 0.29028724834534614, 0.3433873974820313, 0.3643075801906732], [0.2860810321324386, 0.3315140722092321, 0.7466397438103956, 0.9333443271530304, 0.8076756064663823, 0.17680726513852577, 0.9468876088370146, 0.8894782664426617, 0.4165046998579205, 0.33081195599495633, 0.7958937363312375, 0.697315899727723, 0.39716229830361527, 0.5542620614564123, 0.3872808227217769, 0.3376206829754461], [0.4068241375312442, 0.5184937410840242, 0.7324966028377018, 0.06455652539608356, 0.34829717014760286, 0.38400644074607226, 0.9064305923916527, 0.7849256008854584, 0.8856414713763423, 0.6242756501056056, 0.8697650035033798, 0.559255367948503, 0.5857622353651977, 0.524709809967746, 0.5381616365140759, 0.4293293025861641], [0.33690632473487014, 0.057688028522481054, 0.9915587628064197, 0.13910182413393066, 0.1398651504797074, 0.8421678756267738, 0.9746266001948644, 0.07933193102122263, 0.27157495108590374, 0.8198600232310451, 0.565803411780718, 0.66943504488863, 0.8654716528679827, 0.951784419357092, 0.3636774758958103, 0.2534985190748773], [0.9112582714690936, 0.3967770345347562, 0.38961112843397844, 0.2065849139349545, 0.7669874317597049, 0.756019296313926, 0.1700669494814782, 0.27648688410905775, 0.256137035802166, 0.9065782168264491, 0.552568341111821, 0.5831438819753446, 0.1592154733451481, 0.9265744866090235, 0.21375658098928535, 0.9003895124721043], [0.5845106682058016, 0.31525882164015795, 0.9782214352119561, 0.32824761154466287, 0.7045883834692319, 0.771392400870192, 0.23583471536208678, 0.16306883115293244, 0.884384143263393, 0.7327932919456829, 0.14210904188861342, 0.7817894817950267, 0.502857793021901, 0.44987790379063547, 0.5513419781242191, 0.9338685739263562], [0.8159490558877306, 0.9387365796786683, 0.35415750014942476, 0.5710926872615956, 0.9101528885061055, 0.019718303773640613, 0.36889113886130437, 0.8768790610221803, 0.6595557296643741, 0.3525480337505464, 0.08337540029625705, 0.9497140766739711, 0.1023123747442677, 0.846713267980116, 0.34648895085114495, 0.16573039169443327], [0.924283067333305, 0.05567529537489045, 0.415921403310676, 0.7524172601048925, 0.8350365352473141, 0.7834983246426949, 0.21315024062782872, 0.40447366848160715, 0.6725675633830912, 0.23159609378544338, 0.4460051027646096, 0.8781623134261183, 0.5219611150037555, 0.4556950266408096, 0.21091859124522294, 0.2878186797478719], [0.17260752999836534, 0.7134523306297659, 0.3587720239454035, 0.31987046495936006, 0.20021545966288343, 0.9654083543908187, 0.9564651941189306, 0.15169670883924707, 0.5376309086680028, 0.027361648900125952, 0.13619326270884358, 0.6547446133283982, 0.9415961729985547, 0.5152920911469268, 0.6538703886267255, 0.5382833366578837], [0.43755306378311737, 0.7431342035733753, 0.3559693200418534, 0.9671704860588525, 0.6036471156705858, 0.3873463535684427, 0.1432050633020778, 0.43511257983421425, 0.3932966984695307, 0.8241425720785305, 0.3089484171420054, 0.7305573218479123, 0.16216724192188295, 0.952906365061545, 0.9272917253263762, 0.9421038570304155], [0.0424517466130994, 0.5918652455354411, 0.8019945861438985, 0.10285318425905857, 0.14099933821046062, 0.9552820382829766, 0.6526663493341418, 0.5837444613832482, 0.3837536789089331, 0.6715269911475749, 0.9486079735917889, 0.7255805780972867, 0.38441618856753174, 0.8212750574475086, 0.6053761218556896, 0.322677489578075], [0.5241099506790364, 0.7318412943710443, 0.5207664372606955, 0.8277755734129114, 1.0, 0.564536722118245, 0.5820867469983633, 0.5643797361339249, 0.4769507848939157, 0.6842291736128164, 0.8534355806573104, 0.4174394145719, 0.9168060697406635, 0.5544845782873982, 0.5745615014197151, 0.564212668480887], [0.7326917551393107, 0.767378456482117, 0.3266791919398499, 0.3378777655277502, 0.9676155197208242, 0.9591901251495147, 0.7363067534938383, 0.4906748164956264, 0.9050753280683018, 0.8744335362389182, 0.12681299008611907, 0.11658657741029296, 0.944400317140493, 0.4095526691577991, 0.6648277222845926, 0.15470896742828874], [0.6441948671344081, 0.9276258606324518, 0.09304300047743902, 0.6460592557280082, 0.953687694387175, 0.06979899312934278, 0.9778916206210452, 0.5164529232878626, 0.7610997372285061, 0.7998565522565294, 0.6919618135193738, 0.40854378216682424, 0.24488229291712366, 0.6482354559326661, 0.6575530781855013, 0.28572673348892713], [0.3798304695393182, 0.3176265735504541, 0.2820951723929345, 0.42936746890345295, 0.1505380370558935, 0.6127818276481123, 0.5705050699991863, 0.34049107808324436, 0.824174257323072, 0.9463280762231764, 0.8944643717428108, 0.5796930707970783, 0.44785364873593875, 0.2179916019699581, 0.4048121245028477, 0.2627542110770175], [0.703154626153721, 0.6692226097263619, 0.4022024125433242, 0.7968435735482937, 0.12803287200097363, 0.965092222064596, 0.3312375464386866, 0.07604746737680022, 0.8798963604455808, 0.30483005547078157, 0.7975053630876981, 0.25488186804679913, 0.4361581929040896, 0.5192671490985189, 0.10469452903844646, 0.509862392423194], [0.4625973691165362, 0.7507890706069669, 0.8139802500109818, 0.7299869874461622, 0.09538122750077593, 0.7855506643459627, 0.8285504216657941, 0.42114946866005265, 0.8341896750750183, 0.6875575645280808, 0.09353772236380568, 0.7378722926218747, 0.06636834528851217, 0.27488533902131485, 0.601308888647249, 0.7377354699749903], [0.17720621117207322, 0.24254910672814564, 0.5937591590160004, 0.1164432736906613, 0.4810043358376679, 0.5974051224958756, 0.939894531342828, 0.02554406805414432, 0.8763800184206488, 0.9432063595166272, 0.09331376529443156, 0.6043326691433968, 0.37198621115767083, 0.5135537234122993, 0.08292316544234403, 0.5446491903339842], [0.5849146550737078, 0.7700284951165116, 0.6704367306876634, 0.12825970954712426, 0.7237557960593639, 0.4435437353590767, 0.24710170027342931, 0.24238491955188426, 0.5730362889665498, 0.585601648784907, 0.9440402575434287, 0.44491844290066895, 0.5239083173046803, 0.8475154807623757, 0.9424135082838911, 0.0875736951980292], [0.5184174084494466, 0.5519756830150527, 0.27429844187809965, 0.33933240629989075, 0.01965133268858662, 0.548896453340957, 0.36949891946114927, 0.5473395556432501, 0.6956927510641562, 0.644981237294397, 0.7767774522038887, 0.13427918589084867, 0.5859811516002129, 0.7809527032914487, 0.12211061174845662, 0.9068525822394123], [0.7772563314679847, 0.2056905258958463, 0.044492564409261026, 0.5838913656988506, 0.6687797364219726, 0.13373261542250475, 0.5574629912743158, 0.3200973025055108, 0.0557213830033147, 0.6341283209196787, 0.14775837696655553, 0.10553778861477153, 0.6680164100761958, 0.2986305493285249, 0.40894632879634246, 0.11740679317240592], [0.6057152979961244, 0.5177030502088706, 0.7429066459080308, 0.6890928586499637, 0.481049703346898, 0.4406099697621951, 0.5857341507166267, 0.052521893423799516, 0.271006777041736, 0.7285712331105045, 0.37393341345859576, 0.2862941874139008, 0.42653091939777876, 0.9199839557443548, 0.20569196613423457, 0.11824861251034274], [0.7043421027048398, 0.9749124875149335, 0.023312418671538514, 0.24306471207114203, 0.9727823749387, 0.7476968787873768, 0.9462906300250817, 0.9630326811693871, 0.23574830105879124, 0.576978221435212, 0.18664409333032805, 0.769846304960397, 0.4231456390661783, 0.29558228477977677, 0.4512727746696634, 0.3087403026949021], [0.034456983319879106, 0.6621863250805274, 0.787869448151058, 0.18924228338274554, 0.012597765182092942, 0.0529611661322182, 0.7268263843031298, 0.1890478512003307, 0.650132970009196, 0.9672525796469832, 0.44232097296744566, 0.15349556658618138, 0.10414651833171427, 0.714245181862502, 0.5743620284029413, 0.40744632051497165], [0.8590575512058756, 0.1715165494192599, 0.14314529340896506, 0.8867987029213076, 0.08920260481514902, 0.4910442376422145, 0.16194976592525595, 0.3804332093048041, 0.8664848605741222, 0.27693839884377663, 0.21658448906463, 0.3176604191525782, 0.5285264416966297, 0.8727059702922028, 0.5175719885155391, 0.6140110711124906]]
  console.log(
    "oldgrid: ", oldgrid
  )

  let interpolate = 10
  v = v / interpolate

  let grid = generateInterpolatedGrid(oldgrid, interpolate);
  // v*=10
  // grid = oldgrid

  console.log("out")

  // let grid = generateRandomGrid(n, m)

  // return(
  //   <div className="flex">
  //     {grid.map((row, i) => {
  //       return (
  //         <div key={i} style={{ display: "flex" }}>
  //           {row.map((cell, j) => {
  //             return (
  //               <div
  //                 key={j}
  //                 style={{
  //                   width: v,
  //                   height: v,
  //                   backgroundColor: getShadeFromValue(cell, color),
  //                   // border: "1px solid black",
  //                   display: "flex",
  //                   justifyContent: "center",
  //                   alignItems: "center",
  //                   color: "black",
  //                 }}
  //               >
            
  //               </div>
  //             );
  //           })}
  //         </div>
  //       );
  //     })}
  //   </div>
  // )

  return(
    <div>
       {grid.map((row, i) => {
          return (
            <div key={i} style={{ display: "flex" }}>
              {row.map((cell, j) => {
                return (
                  <div
                    key={j}
                    style={{
                      width: v,
                      height: v,
                      backgroundColor: getShadeFromValue(cell, color),
                      // border: "1px solid black",
                      display: "flex",
                      justifyContent: "center",
                      alignItems: "center",
                      color: "black",
                    }}
                  >
              
                  </div>
                );
              })}
            </div>
          );
        })}
    </div>
  )
};

export default Map;
